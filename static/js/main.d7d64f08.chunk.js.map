{"version":3,"sources":["constants/actionTypes.ts","reducers/index.ts","reducers/posts.ts","components/Form/styles.ts","api/index.ts","components/Form/Form.tsx","actions/posts.ts","components/Posts/Post/styles.ts","components/Posts/Post/Post.tsx","components/Posts/styles.ts","components/Posts/Posts.tsx","images/memories.png","styles.ts","App.tsx","index.tsx"],"names":["FETCH_ALL","CREATE_POST","UPDATE_POST","DELETE_POST","combineReducers","posts","action","type","payload","map","post","_id","filter","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","Form","currentId","setCurrentId","useState","author","title","message","tags","selectedFile","postData","setPostData","classes","useStyles","dispatch","useDispatch","useSelector","state","find","p","useEffect","clear","Paper","className","autoComplete","noValidate","onSubmit","e","preventDefault","a","api","data","console","log","newPost","createPost","Typography","variant","TextField","name","label","fullWidth","value","onChange","target","split","muiltiple","onDone","base64","Button","color","size","onClick","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","flexDirection","borderRadius","position","overlay","top","left","overlay2","right","grid","details","cardActions","Post","Card","CardMedia","image","moment","createdAt","fromNow","style","fontSize","tag","gutterBottom","CardContent","component","CardActions","likeCount","mainContainer","alignItems","smMargin","actionDiv","textAlign","Posts","length","Grid","container","item","xs","sm","CircularProgress","appBar","heading","marginLeft","breakpoints","down","App","setTimeout","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7d64f08.chunk.js","sourcesContent":["export const FETCH_ALL = \"FETCH_ALL\";\nexport const CREATE_POST = \"CREATE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\n","import { combineReducers } from \"redux\";\n\nimport posts from \"./posts\";\n\nexport default combineReducers({ posts });\n","// eslint-disable-next-line import/no-anonymous-default-export\nimport {\n  FETCH_ALL,\n  UPDATE_POST,\n  CREATE_POST,\n  DELETE_POST,\n} from \"../constants/actionTypes\";\n\nexport default (posts = [] as any[], action: any) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE_POST:\n      return [...posts, action.payload];\n    case UPDATE_POST:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case DELETE_POST:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  fileInput: {\n    width: \"97%\",\n    margin: \"10px 0\",\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import axios from \"axios\";\n\nconst url = \"https://rememory-project-api.herokuapp.com/posts\";\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost: any) => axios.post(url, newPost);\nexport const updatePost = (id: any, updatedPost: any) =>\n  axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id: any) => axios.delete(`${url}/${id}`);\nexport const likePost = (id: any) => axios.patch(`${url}/${id}/likePost`);\n","import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport useStyles from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ({ currentId, setCurrentId }: any) => {\n  const [postData, setPostData] = useState({\n    author: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\" as string | string[],\n    selectedFile: \"\",\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const post = useSelector((state: any) =>\n    currentId ? state.posts.find((p: any) => p._id === currentId) : null\n  );\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post, dispatch]);\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      author: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\" as string | string[],\n      selectedFile: \"\",\n    });\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n    clear();\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing` : `Creating`} a memory\n        </Typography>\n        <TextField\n          name=\"author\"\n          variant=\"outlined\"\n          label=\"Author\"\n          fullWidth\n          value={postData.author}\n          onChange={(e) => setPostData({ ...postData, author: e.target.value })}\n        />\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            muiltiple={false}\n            onDone={({ base64 }: any) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import {\n  FETCH_ALL,\n  UPDATE_POST,\n  CREATE_POST,\n  DELETE_POST,\n} from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n\n//Action Creators\nexport const getPosts = () => async (dispatch: any) => {\n  try {\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post: any) => async (dispatch: any) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE_POST, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id: any, post: any) => async (dispatch: any) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n    dispatch({ type: UPDATE_POST, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id: any) => async (dispatch: any) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE_POST, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id: any) => async (dispatch: any) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: UPDATE_POST, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    backgroundBlendMode: \"darken\",\n  },\n  border: {\n    border: \"solid\",\n  },\n  fullHeightCard: {\n    height: \"100%\",\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    borderRadius: \"15px\",\n    height: \"100%\",\n    position: \"relative\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"20px\",\n    left: \"20px\",\n    color: \"white\",\n  },\n  overlay2: {\n    position: \"absolute\",\n    top: \"20px\",\n    right: \"20px\",\n    color: \"white\",\n  },\n  grid: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px\",\n  },\n  title: {\n    padding: \"0 16px\",\n  },\n  cardActions: {\n    padding: \"0 16px 8px 16px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n","import React from \"react\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport useStyles from \"./styles\";\nimport { useDispatch } from \"react-redux\";\n\nimport { deletePost, likePost } from \"../../../actions/posts\";\n\nconst Post = ({ post, setCurrentId }: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={\n          post.selectedFile ||\n          \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n        }\n        title={post.title}\n      />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.author}</Typography>\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      <div className={classes.overlay2}>\n        <Button\n          style={{ color: \"white\" }}\n          size=\"small\"\n          onClick={() => setCurrentId(post._id)}\n        >\n          <MoreHorizIcon fontSize=\"medium\" />\n        </Button>\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {post.tags.map((tag: string) => `#${tag} `)}\n        </Typography>\n      </div>\n      <Typography className={classes.title} variant=\"h5\" gutterBottom>\n        {post.title}\n      </Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {post.message}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => dispatch(likePost(post._id))}\n        >\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp;\n          {post.likeCount}\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => {\n            dispatch(deletePost(post._id));\n          }}\n        >\n          <DeleteIcon fontSize=\"small\" />\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nconst Posts = ({ setCurrentId }: any) => {\n  const posts = useSelector((state: any) => state.posts);\n\n  const classes = useStyles();\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      className={classes.mainContainer}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {posts.map((post: any) => (\n        <Grid key={post._id} item xs={12} sm={6}>\n          <Post post={post} setCurrentId={setCurrentId} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Posts;\n","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: \"30px 0\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  heading: {\n    color: \"rgba(0,183,255, 1)\",\n  },\n  image: {\n    marginLeft: \"15px\",\n  },\n  // MUI implementation of media query for mobile devices\n  [theme.breakpoints.down(\"sm\")]: {\n    mainContainer: {\n      flexDirection: \"column-reverse\",\n    },\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nimport Form from \"./components/Form/Form\";\nimport Posts from \"./components/Posts/Posts\";\nimport { getPosts } from \"../src/actions/posts\";\n\nimport memories from \"./images/memories.png\";\nimport useStyles from \"./styles\";\n\nconst App = () => {\n  const [currentId, setCurrentId] = useState<any>(null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(getPosts());\n    }, 100);\n  }, [currentId, dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          Rememory\n        </Typography>\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            className={classes.mainContainer}\n            container\n            justifyContent=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"../src/reducers\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst store: any = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}